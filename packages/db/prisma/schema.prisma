// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId             String              @id @default(cuid())
  email              String              @unique
  name               String
  username           String              @unique
  password           String?
  isVerified         Boolean             @default(false)
  isActive           Boolean             @default(true)
  avatar             String?
  provider           PROVIDER            @default(EMAIL)
  providerId         String?
  code               String?
  refreshToken       String?
  verificationToken  VerificationToken?
  resetPasswordToken ResetPasswordToken?
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt

  @@index([email, username, userId])
  @@map("users")
}

model VerificationToken {
  id                String   @id @default(cuid())
  userId            String   @unique
  user              User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  verificationToken String   @unique
  expiresAt         DateTime
  createdAt         DateTime @default(now())

  @@map("verification_token")
}

model ResetPasswordToken {
  id                 String   @id @default(cuid())
  userId             String   @unique
  user               User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  resetPasswordToken String   @unique
  expiresAt          DateTime
  createdAt          DateTime @default(now())

  @@map("reset_password_token")
}

enum PROVIDER {
  EMAIL
  GOOGLE
  GITHUB
}
